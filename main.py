from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler,
    MessageHandler, CallbackQueryHandler,
    ContextTypes, filters
)

BOT_TOKEN = "7006467443:AAFNVxqnP4mKsnGkdehqH7jecPXWwkctbtI"
SUPPORT_GROUP_ID = -1002288022061

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤—ñ—Ç! –í–≤–µ–¥—ñ—Ç—å —Å–≤–æ—î –ø–∏—Ç–∞–Ω–Ω—è ‚Äî –º–∏ –Ω–∞–¥—ñ—à–ª–µ–º–æ –π–æ–≥–æ –≤ —Ç–µ—Ö–ø—ñ–¥—Ç—Ä–∏–º–∫—É.")

# –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
async def handle_user_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    message = update.message.text
    info = (
        f"üì© –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ @{user.username or '–Ω–µ–º–∞—î_–Ω—ñ–∫–Ω–µ–π–º—É'}\n"
        f"ID: {user.id}\n\n"
        f"{message}"
    )
    await context.bot.send_message(chat_id=SUPPORT_GROUP_ID, text=info)
    
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("üîö –ó–∞–≤–µ—Ä—à–∏—Ç–∏ —á–∞—Ç", callback_data="end_chat")]
    ])
    await update.message.reply_text("‚úÖ –í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ. –û—á—ñ–∫—É–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—å.", reply_markup=keyboard)

# –í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–∞–ø–ø–æ—Ä—Ç—É
async def reply_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_chat.id != SUPPORT_GROUP_ID:
        await update.message.reply_text("‚ùå –¶—è –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∞—Ü—é—î —Ç—ñ–ª—å–∫–∏ –≤ –≥—Ä—É–ø—ñ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏.")
        return

    args = context.args
    if len(args) < 2:
        await update.message.reply_text("‚ö†Ô∏è –§–æ—Ä–º–∞—Ç: /reply <user_id> <–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è>")
        return

    user_id = int(args[0])
    reply_text = " ".join(args[1:])
    try:
        await context.bot.send_message(chat_id=user_id, text=f"üí¨ –í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏:\n{reply_text}")
        await update.message.reply_text("‚úÖ –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞.")
    except Exception as e:
        await update.message.reply_text(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

# –û–±—Ä–æ–±–∫–∞ callback –∫–Ω–æ–ø–æ–∫
async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "end_chat":
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(f"{i} ‚≠ê", callback_data=f"rate_{i}")] for i in range(1, 6)
        ])
        await query.message.reply_text("üìù –û—Ü—ñ–Ω—ñ—Ç—å –Ω–∞—à—É –ø—ñ–¥—Ç—Ä–∏–º–∫—É:", reply_markup=keyboard)

    elif query.data.startswith("rate_"):
        rating = query.data.split("_")[1]
        user = update.effective_user
        await context.bot.send_message(
            chat_id=SUPPORT_GROUP_ID,
            text=f"‚≠ê –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á @{user.username or user.id} –∑–∞–ª–∏—à–∏–≤ –æ—Ü—ñ–Ω–∫—É: {rating} –∑ 5"
        )
        await query.message.reply_text("üôè –î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à—É –æ—Ü—ñ–Ω–∫—É!")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app = ApplicationBuilder().token(BOT_TOKEN).build()

app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("reply", reply_command))
app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_user_message))
app.add_handler(CallbackQueryHandler(handle_callback))

print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ")
app.run_polling()
